name: build-and-test
on:
  push:
    branches: [main]
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+*'
  pull_request:

jobs:
  setup-environment:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
      - name: Setup Go
        uses: actions/setup-go@v2.1.4
        with:
          go-version: 1.18beta1
      - name: Setup Go Environment
        run: |
          echo "GOPATH=$(go env GOPATH)" >> $GITHUB_ENV
          echo "$(go env GOPATH)/bin" >> $GITHUB_PATH
      - name: Cache Go
        id: module-cache
        uses: actions/cache@v2
        with:
          path: |
            /home/runner/go/pkg/mod
          key: v1-go-pkg-mod-${{ runner.os }}-${{ hashFiles('**/go.mod', '**/go.sum') }}
      - name: Install dependencies
        if: steps.module-cache.outputs.hit != 'true'
        run: make gomoddownload

  lint:
    runs-on: ubuntu-latest
    needs: [setup-environment]
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
      - name: Setup Go
        uses: actions/setup-go@v2.1.4
        with:
          go-version: 1.18beta1
      - name: Setup Go Environment
        run: |
          echo "GOPATH=$(go env GOPATH)" >> $GITHUB_ENV
          echo "$(go env GOPATH)/bin" >> $GITHUB_PATH
      - name: Cache Go
        id: module-cache
        uses: actions/cache@v2
        with:
          path: |
            /home/runner/go/pkg/mod
          key: v1-go-pkg-mod-${{ runner.os }}-${{ hashFiles('**/go.mod', '**/go.sum') }}
      - name: Cache Tools
        id: tool-cache
        uses: actions/cache@v2
        with:
          path: /home/runner/go/bin
          key: v1-tools-${{ runner.os }}-${{ hashFiles('./internal/tools/go.mod') }}
      - name: Cache Build
        uses: actions/cache@v2
        with:
          path: /home/runner/.cache/go-build
          key: go-build-lint-${{ runner.os }}-${{ hashFiles('**/go.mod', '**/go.sum') }}
      - name: Lint
        run: make -j2 golint

  cross-compile:
    runs-on: ubuntu-latest
    needs: [lint]
    strategy:
      matrix:
        binary:
          - darwin_amd64
          - darwin_arm64
          - linux_amd64
          - linux_arm64
          - windows_amd64
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
      - name: Setup Go
        uses: actions/setup-go@v2.1.4
        with:
          go-version: 1.18beta1
      - name: Setup Go Environment
        run: |
          echo "GOPATH=$(go env GOPATH)" >> $GITHUB_ENV
          echo "$(go env GOPATH)/bin" >> $GITHUB_PATH
      - name: Cache Go
        id: module-cache
        uses: actions/cache@v2
        with:
          path: |
            /home/runner/go/pkg/mod
          key: v1-go-pkg-mod-${{ runner.os }}-${{ hashFiles('**/go.mod', '**/go.sum') }}
      - name: Build Binaries for ${{ matrix.binary }}
        run: make uptrace-${{ matrix.binary }}
      - name: Upload Binaries
        uses: actions/upload-artifact@v2
        with:
          name: uptrace-binaries
          path: ./bin/*

  publish-dev:
    runs-on: ubuntu-latest
    needs: [publish-check]
    if: (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v')) && github.repository == 'uptrace/uptrace'
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
      - name: Setup Go
        uses: actions/setup-go@v2.1.4
        with:
          go-version: 1.18beta1
      - name: Setup Go Environment
        run: |
          echo "GOPATH=$(go env GOPATH)" >> $GITHUB_ENV
          echo "$(go env GOPATH)/bin" >> $GITHUB_PATH
          mkdir bin/ dist/
      - name: Download Binaries
        uses: actions/download-artifact@v2
        with:
          name: uptrace-binaries
          path: ./bin/
      - name: Add Permissions to Tool Binaries
        run: chmod -R +x ./bin
      - name: Verify Distribution Files Exist
        id: check
        run: ./.github/workflows/scripts/verify-dist-files-exist.sh
      - name: Build Docker Image
        if: steps.check.outputs.passed == 'true'
        run: |
          make docker-uptrace
          docker tag uptrace:latest uptrace/uptrace-dev:$GITHUB_SHA
          docker tag uptrace:latest uptrace/uptrace-dev:latest
      - name: Validate Docker Image
        if: steps.check.outputs.passed == 'true'
        run: |
          docker run uptrace/uptrace-dev:$GITHUB_SHA --version
          docker run uptrace/uptrace-dev:latest --version
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push Docker Image
        if: steps.check.outputs.passed == 'true'
        run: |
          docker push uptrace/uptrace-dev:$GITHUB_SHA
          docker push uptrace/uptrace-dev:latest
