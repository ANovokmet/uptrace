schema: v2
name: 'Go: Runtime'

table:
  grid_items:
    - title: Number of hosts
      description: Number of host.name
      type: gauge
      metrics:
        - process.runtime.go.goroutines as $goroutines
      query:
        - uniq($goroutines, host.name) as num_host
      template: ${num_host} hosts

    - title: Number of services
      description: Number of service.name
      type: gauge
      metrics:
        - process.runtime.go.goroutines as $goroutines
      query:
        - uniq($goroutines, service.name) as num_service
      template: ${num_service} services

    - title: Max GC pause
      description: Max garbage collector pause
      type: gauge
      metrics:
        - process.runtime.go.gc.pause_ns as $gc_pause
      query:
        - max($gc_pause) as max_gc_pause
      columns:
        max_gc_pause: { unit: nanoseconds }

    - title: Total heap in use
      description: Total heap memory in use
      type: gauge
      metrics:
        - process.runtime.go.mem.heap_inuse as $mem_in_use
      query:
        - $mem_in_use
      columns:
        mem_in_use: { unit: bytes }

    - title: Total heap objects
      description: Total heap live objects
      type: gauge
      metrics:
        - process.runtime.go.mem.heap_objects as $heap_objects
      query:
        - $heap_objects

  metrics:
    - process.runtime.go.gc.pause_ns as $gc_pause
    - process.runtime.go.mem.heap_inuse as $mem_in_use
    - process.runtime.go.mem.heap_objects as $heap_objects
    - process.runtime.go.goroutines as $goroutines
  query:
    - group by service.name
    - group by host.name
    - max($gc_pause) as max_gc_pause
    - $mem_in_use
    - $heap_objects
    - $goroutines
  columns:
    max_gc_pause: { unit: nanoseconds }

grid_rows:
  - title: General
    items:
      - title: Max GC stop-the-world pause
        metrics:
          - process.runtime.go.gc.pause_ns as $gc_pause
        query:
          - max($gc_pause) as gc_pause_max
        columns:
          gc_pause_max: { unit: nanoseconds }

      - title: Number of completed garbage collection cycles
        metrics:
          - process.runtime.go.gc.count as $gc_count
        query:
          - per_min($gc_count) as gc_count

      - title: Heap memory in use
        metrics:
          - process.runtime.go.mem.heap_inuse as $mem_in_use
        query:
          - $mem_in_use
        columns:
          mem_in_use: { unit: bytes }

      - title: Bytes of allocated heap objects
        metrics:
          - process.runtime.go.mem.heap_alloc as $heap_alloc
        query:
          - $heap_alloc
        columns:
          heap_alloc: { unit: bytes }

      - title: Bytes of heap memory obtained from the OS
        metrics:
          - process.runtime.go.mem.heap_sys as $heap_sys
        query:
          - $heap_sys
        columns:
          heap_sys: { unit: bytes }

      - title: Heap live objects
        metrics:
          - process.runtime.go.mem.heap_objects as $heap_objects
        query:
          - $heap_objects

      - title: Goroutines
        metrics:
          - process.runtime.go.goroutines as $goroutines
        query:
          - $goroutines

      - title: cgo calls
        metrics:
          - process.runtime.go.cgo.calls as $cgo_calls
        query:
          - per_min(delta($cgo_calls)) as cgo_calls
